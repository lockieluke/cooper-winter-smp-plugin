import java.text.SimpleDateFormat

plugins {
    id 'checkstyle'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.20-RC'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.20'
}

group = "me.lockie.coopersmpwinter"

static def getTime() {
    SimpleDateFormat sdf = new SimpleDateFormat("yyMMdd-HHmm")
    sdf.setTimeZone(TimeZone.getTimeZone("UTC"))
    return sdf.format(new Date()).toString()
}

// Set version to version property if supplied
String shortVersion = null
if (hasProperty('ver')) {
    if (ver.charAt(0) == "v") {
        shortVersion = ver.substring(1).toUpperCase()
    } else {
        shortVersion = ver.toUpperCase()
    }
}

// If the tag includes "-RC-" or no tag is supplied, append "-SNAPSHOT"
int rcIdx
if (shortVersion == null || shortVersion == "") {
    version = getTime() + "-SNAPSHOT"
} else if ((rcIdx = shortVersion.indexOf("-RC-")) != -1) {
    version = shortVersion.substring(0, rcIdx) + "-SNAPSHOT"
} else {
    version = shortVersion
}

repositories {
    maven {
        name 'papermc'
        url 'https://repo.papermc.io/repository/maven-public/'
        content {
            includeModule("io.papermc.paper", "paper-api")
            includeModule("io.papermc", "paperlib")
            includeModule("net.md-5", "bungeecord-chat")
        }
    }

    maven { url 'https://repo.dmulloy2.net/repository/public/' }
    maven { url = "https://repo.codemc.org/repository/maven-public/" }

    maven { url = 'https://repo.minebench.de/' }

    mavenCentral()
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT'
    compileOnly 'com.comphenix.protocol:ProtocolLib:5.1.0'
    compileOnly "dev.jorel:commandapi-bukkit-core:9.1.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2"
    implementation 'de.themoep:inventorygui:1.6.1-SNAPSHOT'
    implementation 'io.papermc:paperlib:1.0.8'
    testImplementation 'io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

test {
    useJUnitPlatform()
}

processResources {
    filesMatching("**/plugin.yml") {
        expand ( NAME: rootProject.name, VERSION: version, PACKAGE: project.group.toString() )
    }
}

checkstyle {
    toolVersion '10.12.4'
    maxWarnings = 0
}

tasks.withType(Checkstyle).configureEach {
    reports {
        xml.required = false
        html.required = true
    }
}

shadowJar {
    archiveClassifier.set('')
    relocate 'io.papermc.lib', 'shadow.io.papermc.paperlib'
    archiveFileName.set(String.format("%s.jar", rootProject.name))
    minimize()
}

// Disable jar and replace with shadowJar
jar.enabled = false
assemble.dependsOn(shadowJar)

tasks.register('printProjectName') {
    doLast {
        println rootProject.name
    }
}

tasks.register('release') {
    dependsOn build

    doLast {
        if (!version.endsWith("-SNAPSHOT")) {
            // Rename final JAR to trim off version information
            shadowJar.archiveFile.get().getAsFile()
                    .renameTo(layout.buildDirectory.get().toString() + File.separator + 'libs' + File.separator
                            + rootProject.name + '.jar')
        }
    }
}
kotlin {
    jvmToolchain(17)
}
